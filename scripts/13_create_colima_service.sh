#!/bin/bash

# Script: 13_create_colima_service.sh
# -----------------------------------------------------------------------------
# Inputs:
#   - HEADLESS_SERVER_USER, HEADLESS_BASE_DIR (from environment or defaults)
# Outputs:
#   - Creates the `start_colima.sh` helper script in `scripts/lib/` (if not already there from previous step).
#   - Creates a LaunchDaemon plist file for Colima in `/Library/LaunchDaemons/`.
#   - Loads and starts the Colima service.
# What it does:
#   Sets up Colima to run automatically on system boot as a LaunchDaemon.
#   The daemon will run as the specified $HEADLESS_SERVER_USER.
# Why it's done:
#   To ensure the Docker environment (via Colima) is available after a reboot without manual intervention.
# How it works:
#   - Generates `start_colima.sh` (or ensures it's present).
#   - Generates a .plist file from a template, replacing placeholders.
#   - Copies the .plist to `/Library/LaunchDaemons/`, sets permissions.
#   - Uses `sudo launchctl load -w` to enable and start the service.
# Expected result:
#   Colima service is installed and running. Docker should be accessible after Colima starts.
# -----------------------------------------------------------------------------
# Important: Requires sudo privileges for managing LaunchDaemons.
# Ensure Colima and Docker CLI are installed (script 12).
# -----------------------------------------------------------------------------

# --- Configuration ---
export HEADLESS_SERVER_USER=${HEADLESS_SERVER_USER:-$(whoami)}
export HEADLESS_BASE_DIR=${HEADLESS_BASE_DIR:-"/Users/$HEADLESS_SERVER_USER/headless-mac-server"}
LOG_DIR="$HEADLESS_BASE_DIR/logs"
MAIN_LOG_FILE="$LOG_DIR/setup.log"
SCRIPT_NAME=$(basename "$0")
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

LIB_DIR="$SCRIPT_DIR/lib"
PLIST_LABEL="com.headlessmac.colima.daemon" # Customizable label
PLIST_FILENAME="$PLIST_LABEL.plist"
LAUNCHDAEMONS_DIR="/Library/LaunchDaemons"
TARGET_PLIST_PATH="$LAUNCHDAEMONS_DIR/$PLIST_FILENAME"
START_COLIMA_SCRIPT="$LIB_DIR/start_colima.sh" # This script should already exist from 12 or be created here.

# Colima VM settings (can be overridden by setting these env vars before running this script)
# These will be passed as environment variables to the start_colima.sh script via the plist
export COLIMA_PROFILE_NAME=${COLIMA_PROFILE_NAME:-"headless-mac-server"}
export COLIMA_CPU=${COLIMA_CPU:-4}
export COLIMA_MEM=${COLIMA_MEM:-8}
export COLIMA_DISK=${COLIMA_DISK:-60}
export COLIMA_VM_TYPE=${COLIMA_VM_TYPE:-"vz"}
export COLIMA_MOUNT_TYPE=${COLIMA_MOUNT_TYPE:-"virtiofs"}


log_action() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] [$SCRIPT_NAME] $1" | tee -a "$MAIN_LOG_FILE"
}

ensure_dir() {
    if [ ! -d "$1" ]; then mkdir -p "$1"; fi
}

# --- Create start_colima.sh if it doesn't exist ---
# Note: This is a fallback. It's better if this script is maintained separately in lib/.
# The content of start_colima.sh is complex and provided in a separate file block.
# Here we just ensure it exists. The actual content for `start_colima.sh` is above.
ensure_dir "$LIB_DIR"
if [ ! -f "$START_COLIMA_SCRIPT" ]; then
    log_action "ERROR: $START_COLIMA_SCRIPT not found. Please create it first (it should be generated by a previous step or manually)."
    log_action "This script is essential for the LaunchDaemon to function."
    exit 1
else
    chmod +x "$START_COLIMA_SCRIPT"
    chown "$HEADLESS_SERVER_USER:staff" "$START_COLIMA_SCRIPT"
    log_action "$START_COLIMA_SCRIPT found and permissions set."
fi


# --- Main Logic ---
log_action "Starting Colima service creation..."

# Create the .plist content
# StandardErrorPath and StandardOutPath are relative to the user's $HOME if UserName is set.
# However, start_colima.sh handles its own logging to $HEADLESS_BASE_DIR/logs.
# For the daemon's own stdout/stderr before script execution, we can use other paths if needed,
# but usually, the script's internal logging is preferred.
# The WorkingDirectory for the daemon should be the user's home.
# EnvironmentVariables in plist will be available to start_colima.sh
PLIST_CONTENT="<?xml version=\"1.0\" encoding=\"UTF-8\"?>
<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">
<plist version=\"1.0\">
<dict>
    <key>Label</key>
    <string>$PLIST_LABEL</string>
    <key>ProgramArguments</key>
    <array>
        <string>/bin/bash</string>
        <string>$START_COLIMA_SCRIPT</string>
    </array>
    <key>UserName</key>
    <string>$HEADLESS_SERVER_USER</string>
    <key>GroupName</key>
    <string>staff</string>
    <key>RunAtLoad</key>
    <true/>
    <key>KeepAlive</key>
    <dict>
        <key>SuccessfulExit</key>
        <false/> <key>Crashed</key>
        <true/> </dict>
    <key>StandardOutPath</key>
    <string>$HEADLESS_BASE_DIR/logs/colima_launchd.out.log</string>
    <key>StandardErrorPath</key>
    <string>$HEADLESS_BASE_DIR/logs/colima_launchd.err.log</string>
    <key>WorkingDirectory</key>
    <string>/Users/$HEADLESS_SERVER_USER</string> <key>EnvironmentVariables</key>
    <dict>
        <key>HOME</key>
        <string>/Users/$HEADLESS_SERVER_USER</string>
        <key>PATH</key> <string>/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin</string>
        <key>HEADLESS_SERVER_USER</key>
        <string>$HEADLESS_SERVER_USER</string>
        <key>HEADLESS_BASE_DIR</key>
        <string>$HEADLESS_BASE_DIR</string>
        <key>COLIMA_PROFILE_NAME</key>
        <string>$COLIMA_PROFILE_NAME</string>
        <key>COLIMA_CPU</key>
        <string>$COLIMA_CPU</string>
        <key>COLIMA_MEM</key>
        <string>$COLIMA_MEM</string>
        <key>COLIMA_DISK</key>
        <string>$COLIMA_DISK</string>
        <key>COLIMA_VM_TYPE</key>
        <string>$COLIMA_VM_TYPE</string>
        <key>COLIMA_MOUNT_TYPE</key>
        <string>$COLIMA_MOUNT_TYPE</string>
    </dict>
    <key>ProcessType</key>
    <string>Background</string>
    <key>LaunchOnlyOnce</key>
    <true/> </dict>
</plist>"

TEMP_PLIST_PATH="/tmp/$PLIST_FILENAME"
echo "$PLIST_CONTENT" > "$TEMP_PLIST_PATH"
log_action "Temporary plist created at $TEMP_PLIST_PATH"

# Unload existing service if it's running (for updates)
if [ -f "$TARGET_PLIST_PATH" ]; then
    log_action "Service $PLIST_LABEL already exists. Unloading current version..."
    sudo launchctl unload "$TARGET_PLIST_PATH" 2>/dev/null || true
fi

# Copy plist to LaunchDaemons
log_action "Copying $TEMP_PLIST_PATH to $TARGET_PLIST_PATH..."
sudo cp "$TEMP_PLIST_PATH" "$TARGET_PLIST_PATH"
rm "$TEMP_PLIST_PATH"

# Set permissions for the plist file
sudo chown root:wheel "$TARGET_PLIST_PATH"
sudo chmod 644 "$TARGET_PLIST_PATH"
log_action "Permissions set for $TARGET_PLIST_PATH (owner: root:wheel, mode: 644)."

# Load the service
log_action "Loading and starting service $PLIST_LABEL..."
sudo launchctl load -w "$TARGET_PLIST_PATH"
if [ $? -eq 0 ]; then
    log_action "Service $PLIST_LABEL loaded successfully."
    log_action "It should start Colima shortly. Check logs at:"
    log_action "  Daemon logs: $HEADLESS_BASE_DIR/logs/colima_launchd.*.log"
    log_action "  start_colima.sh logs: $HEADLESS_BASE_DIR/logs/colima_daemon.log / .err"
else
    log_action "ERROR: Failed to load service $PLIST_LABEL."
    log_action "Check for errors above or in system logs: log show --predicate 'process == \"launchd\"' --last 1h"
    exit 1
fi

log_action "Colima service creation script finished."
log_action "To check status: sudo launchctl list | grep $PLIST_LABEL"
log_action "To see Colima VM status: colima status --profile $COLIMA_PROFILE_NAME (run as $HEADLESS_SERVER_USER)"